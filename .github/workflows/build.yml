name: Build Electron App

# 触发条件：推送到 main 分支或创建 pull request
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # 手动触发
  workflow_dispatch:

jobs:
  # Windows 构建
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Electron cache
        run: |
          echo "ELECTRON_CACHE=${{ runner.temp }}/electron-cache" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE=${{ runner.temp }}/electron-builder-cache" >> $GITHUB_ENV
      
      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/electron-cache
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build Windows app
        run: npm run build:win
      
      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: |
            dist/*.exe
            dist/*.msi
            dist/*.zip
          retention-days: 30

  # macOS 构建
  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Electron cache
        run: |
          echo "ELECTRON_CACHE=${{ runner.temp }}/electron-cache" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE=${{ runner.temp }}/electron-builder-cache" >> $GITHUB_ENV
      
      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/electron-cache
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-
      
      - name: Install dependencies
        run: |
          npm config set registry https://registry.npmmirror.com
          npm config set electron_mirror https://cdn.npmmirror.com/binaries/electron/
          npm ci
      
      - name: Build macOS app
        run: npm run build:mac
      
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            dist/*.dmg
            dist/*.zip
          retention-days: 30

  # Linux 构建
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Setup Electron cache
        run: |
          echo "ELECTRON_CACHE=${{ runner.temp }}/electron-cache" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE=${{ runner.temp }}/electron-builder-cache" >> $GITHUB_ENV
      
      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/electron-cache
          key: ${{ runner.os }}-electron-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-
      
      - name: Install dependencies
        run: |
          npm config set registry https://registry.npmmirror.com
          npm config set electron_mirror https://cdn.npmmirror.com/binaries/electron/
          npm ci
      
      - name: Build Linux app
        run: npm run build:linux
      
      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: |
            dist/*.AppImage
            dist/*.deb
            dist/*.rpm
          retention-days: 30